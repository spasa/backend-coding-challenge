{"version":3,"sources":["../../node_modules/browser-pack/_prelude.js","js/apps/codingtest/codingtest-main.js","js/apps/codingtest/expenses/expenses-controller.js","js/apps/codingtest/expenses/main.js","js/apps/codingtest/partials.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","angular","run","$rootScope","gulpBuildConfig","config","extend","version","full","mainTitle","mainHeading","contentSections","appSections","tabSections","currentSection","selectTabSection","selectedIndex","copy","active","$","document","ready","bootstrap","controller","ExpensesCtrl","$scope","$config","$restalchemy","restExpenses","init","root","apiroot","at","dateOptions","changeMonth","changeYear","dateFormat","loadExpenses","get","then","expenses","saveExpense","expensesform","$valid","newExpense","currency","amount","replace","trim","Number","post","clearExpense","setTax","grossAmount","vat","app","$routeProvider","when","templateUrl","otherwise","redirectTo","push","title","image","put"],"mappings":"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","file":"../backend-coding-challenge/codingtest.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n\n/******************************************************************************************\n\nAlchemytec Coding Test for Expenses Back End\n\n******************************************************************************************/\n\n// App files\nrequire(\"./partials.js\");\nrequire(\"./expenses/main.js\");\n\n// Declare app level module which depends on filters, and services\nvar app = angular.module(\"alcExpenses\", [\n\t\"alcShared\",\n\t\"codingtest.partials\",\n\t\"expenses.controllers\"\n]);\n\napp.run([\"$rootScope\", function($rootScope) {\n\t// Basic config options\n\tvar gulpBuildConfig = {};\n\t$rootScope.config = angular.extend({ angular: angular.version.full }, gulpBuildConfig);\n\n\t// Headings used by the menu bars\n\t$rootScope.mainTitle = \"\";\n\t$rootScope.mainHeading = \"\";\n\n\t// Sections of content are used for bookmark navigation\n\t$rootScope.contentSections = [];\n\n\t// App sections are distinct areas of the website\n\t// These will ultimately be retrieved from the server\n\t$rootScope.appSections = $rootScope.appSections || [];\n\n\t// Initialise tab sections\n\t$rootScope.tabSections = $rootScope.tabSections || {};\n\t$rootScope.currentSection = [];\n\t$rootScope.selectTabSection = function(currentSection, selectedIndex) {\n\t\tif ($rootScope.tabSections[currentSection]) {\n\t\t\t$rootScope.currentSection = angular.copy($rootScope.tabSections[currentSection]);\n\n\t\t\tfor (var u = 0; u < $rootScope.currentSection.length; u++) {\n\t\t\t\tif (u == selectedIndex)\n\t\t\t\t\t$rootScope.currentSection[u].active = true;\n\t\t\t\telse\n\t\t\t\t\t$rootScope.currentSection[u].active = false;\n\t\t\t}\n\t\t}\n\t};\n}]);\n\n// Bootstrap the app\n$(document).ready(function() {\n\tangular.bootstrap(\"body\", [\"alcExpenses\"]);\n});\n","\"use strict\";\n\n/******************************************************************************************\n\nExpenses controller\n\n******************************************************************************************/\n\nvar app = angular.module(\"expenses.controller\", []);\n\napp.controller(\"ctrlExpenses\", [\"$rootScope\", \"$scope\", \"config\", \"restalchemy\", function ExpensesCtrl($rootScope, $scope, $config, $restalchemy) {\n\t// Update the headings\n\t$rootScope.mainTitle = \"Expenses\";\n\t$rootScope.mainHeading = \"Expenses\";\n\n\t// Update the tab sections\n\t$rootScope.selectTabSection(\"expenses\", 0);\n\n\tvar restExpenses = $restalchemy.init({ root: $config.apiroot }).at(\"expenses\");\n\n\t$scope.dateOptions = {\n\t\tchangeMonth: true,\n\t\tchangeYear: true,\n\t\tdateFormat: \"dd/mm/yy\"\n\t};\n\n\tvar loadExpenses = function() {\n\t\t// Retrieve a list of expenses via REST\n\t\trestExpenses.get().then(function(expenses) {\n\t\t\t$scope.expenses = expenses;\n\t\t});\n\t}\n\n\t$scope.saveExpense = function() {\n\t\tif ($scope.expensesform.$valid) {\n\t\t\t//setup currency and amount and post to backend\n\t\t\t$scope.newExpense.currency = $scope.newExpense.amount.replace(/\\d+/g, '').trim();\n\t\t\t$scope.newExpense.amount = Number($scope.newExpense.amount.replace(/[^0-9\\.-]+/g,\"\"));\n\n\t\t\t// Post the expense via REST\n\t\t\trestExpenses.post($scope.newExpense).then(function() {\n\t\t\t\t// Reload new expenses list\n\t\t\t\tloadExpenses();\n\t\t\t});\n\t\t}\n\t};\n\n\t$scope.clearExpense = function() {\n\t\t$scope.newExpense = {};\n\t};\n\n\t$scope.setTax = function() {\n\t\tvar grossAmount = Number($scope.newExpense.amount.replace(/[^0-9\\.-]+/g,\"\"));\n\n\t\t$scope.newExpense.vat = grossAmount - (grossAmount / (1 + 20/100));\n\t};\n\n\t// Initialise scope variables\n\tloadExpenses();\n\t$scope.clearExpense();\n}]);\n","\"use strict\";\n\n/******************************************************************************************\n\nTasks main\n\n******************************************************************************************/\n\nrequire(\"./expenses-controller.js\");\n\nvar app = angular.module(\"expenses.controllers\", [\n\t\"expenses.controller\"\n]);\n\napp.config([\"$routeProvider\", function($routeProvider) {\n\t// Labour analysis routes\n\t$routeProvider.when(\"/expenses\", { templateUrl: \"codingtest/expenses-content.html\" });\n\n\t$routeProvider.otherwise({redirectTo: \"/expenses\"});\n}]);\n\napp.run([\"$rootScope\", function($rootScope) {\n\t// Add app button\n\t$rootScope.appSections = $rootScope.appSections || [];\n\t$rootScope.appSections.push({ title: \"Expenses\", image: \"img/icon-generic.png\", app: \"expenses\" });\n\n\t// Configure tab sections\n\t$rootScope.tabSections = $rootScope.tabSections || {};\n\t$rootScope.tabSections.expenses = [\n\t\t{ title: \"Expenses\", app: \"expenses\" }\n\t];\n}]);\n","angular.module(\"codingtest.partials\",[]).run([\"$templateCache\",function(e){e.put(\"codingtest/expenses-content.html\",'<div ng-controller=\"ctrlExpenses\"><h2>Expenses</h2><div bookmarklist id=\"bookmarks\" class=\"section-list\"></div><h3>Add an expense</h3><form name=\"expensesform\"><ul><li><label>Date</label><input type=\"text\" ng-required=\"true\" ng-model=\"newExpense.date\" ui-date=\"dateOptions\" placeholder=\"dd/mm/yyyy\"></li><li><label>Amount</label><input type=\"text\" ng-required=\"true\" ng-model=\"newExpense.amount\" ng-change=\"setTax()\" placeholder=\"00.00\"></li><li><label>VAT</label><input type=\"text\" ng-value=\"newExpense.vat | number: 2\" readonly=\"true\" placeholder=\"00.00\"></li><li><label>Reason</label><textarea at-auto-resize ng-required=\"true\" ng-model=\"newExpense.reason\" ng-trim=\"false\" placeholder=\"why oh why?\"></textarea></li><li><label></label><button ng-click=\"saveExpense()\" class=\"solid\">Save Expense</button> <button ng-click=\"clearExpense()\">cancel</button></li></ul></form><h3>Submitted expenses</h3><div class=\"list-table expenses-data\"><div class=\"header-row\"><div class=\"col-4\">Date</div><div class=\"col-4 figures\">Amount (inc. VAT)</div><div class=\"col-2 figures\">VAT</div><div class=\"col-15\">Reason</div></div><div ng-repeat=\"expense in expenses\" class=\"body-row\"><div class=\"col-4\">{{expense.date | date:\\'dd MMM yyyy\\'}}</div><div class=\"col-4 figures\">{{expense.amount | currency:\"&pound;\"}}</div><div class=\"col-2 figures\">{{expense.vat | currency:\"&pound;\"}}</div><div class=\"col-15\">{{expense.reason}}</div></div></div></div>')}]);"]}